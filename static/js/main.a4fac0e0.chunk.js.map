{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","Text","setText","style","color","heading","backgroundColor","placeholder","rows","value","onChange","event","target","upperText","toUpperCase","showAlert","lowerText","toLowerCase","navigator","clipboard","writeText","split","length","defaultProps","Alert","alert","xmlns","display","fill","viewBox","d","class","role","width","height","xlinkHref","msg","App","Mode","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4fac0e0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                    </li> */}\r\n                </ul>\r\n                {/* <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form> */}\r\n                <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode===\"light\"?\"dark\":\"light\"} mode</label>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Title\",\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const UpConvert = () => {\r\n        let upperText = Text.toUpperCase();\r\n        setText(upperText);\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n    }\r\n    const LowConvert = () => {\r\n        let lowerText = Text.toLowerCase();\r\n        setText(lowerText);\r\n        props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n    }\r\n    const copyText = () => {\r\n        navigator.clipboard.writeText(Text);\r\n        props.showAlert(\"Copied to Clipboard!\", \"warning\");\r\n    }\r\n    const clearText = () => {\r\n        setText('');\r\n        props.showAlert(\"Text Cleared!\", \"danger\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const [Text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode===\"light\"?\"black\":\"#ECECED\"}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" style={{backgroundColor: props.mode===\"light\"?\"white\":\"#1F2128\", color: props.mode===\"light\"?\"black\":\"#ECECED\"}} placeholder={\"Enter text here\"} id=\"textBox\" rows=\"8\" value={Text} onChange={handleOnChange}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={UpConvert}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={LowConvert}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-warning mx-1\" onClick={copyText}>Copy to clipboard</button>\r\n            <button className=\"btn btn-danger mx-1\" onClick={clearText}>Clear</button>\r\n        </div>\r\n        <div className=\"container my-5\" style={{color: props.mode===\"light\"?\"black\":\"#ECECED\"}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{Text.split(\" \").length} words, {Text.length} characters</p>\r\n            <p>{0.008 * Text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{Text.length>0 ? Text : \"Enter text above to preview here.\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{display: \"none\"}}>\r\n            <symbol id=\"success\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\r\n            </symbol>\r\n            <symbol id=\"info\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\"/>\r\n            </symbol>\r\n            <symbol id=\"danger\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"/>\r\n            </symbol>\r\n            <symbol id=\"warning\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"/>\r\n            </symbol>\r\n        </svg>\r\n        \r\n        <div class={`alert alert-${props.alert.type} d-flex align-items-center`} role=\"alert\">\r\n            \r\n        <svg class=\"bi flex-shrink-0 me-2\" width=\"24\" height=\"24\" role=\"img\" aria-label=\"Info:\"><use xlinkHref={`#${props.alert.type}`}/></svg>\r\n            <div>\r\n            {props.alert.msg}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\r\n// import About from './Components/About';\r\nimport Navbar from './Components/Navbar';\r\nimport TextForm from './Components/TextForm';\r\nimport React, { useState } from 'react'\r\nimport Alert from './Components/Alert';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  const [Mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const toggleMode = ()=>{\r\n    if (Mode === \"light\"){\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"rgb(36 39 49)\";\r\n      showAlert(\"Dark mode enabled!\", \"success\");\r\n    }\r\n    else{\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"White\";\r\n      showAlert(\"Light mode enabled!\", \"success\");\r\n    }\r\n  }\r\n\r\n  const showAlert = (message, type)=>{\r\n    setAlert({\r\n      msg : message,\r\n      type : type\r\n    });\r\n    setTimeout(() => { setAlert(null) }, 3000);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {/* <Router> */}\r\n      <Navbar title=\"TextUtils\" mode={Mode} toggleMode={toggleMode}/>\r\n      <Alert alert={alert}/>\r\n      <div className=\"container my-3\">\r\n        {/* <Switch>\r\n          <Route exact path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <TextForm showAlert={showAlert} heading = \"Enter your text below \" mode={Mode}/>\r\n          </Route>\r\n        </Switch> */}\r\n      </div>\r\n      <TextForm showAlert={showAlert} heading = \"Enter your text below \" mode={Mode}/>\r\n    {/* </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}